---
interface Props {
  content: string
}

const { content } = Astro.props
---

<section class="mermaid" data-content={content}></section>

<script>
  const currentTheme = document.documentElement.getAttribute('data-theme')

  async function renderDiagrams(graphs: HTMLCollectionOf<Element>): Promise<void> {
    const { default: mermaid } = await import('mermaid')
    mermaid.initialize({
      startOnLoad: false,
      fontFamily: 'var(--sans-font)',
      theme: currentTheme === 'dark' ? 'dark' : 'default',
    })

    for (const graph of graphs) {
      const content = graph.getAttribute('data-content')
      if (!content) continue
      let svg = document.createElement('svg')
      const id = (svg.id = 'mermaid-' + Math.round(Math.random() * 100000))
      graph.appendChild(svg)
      mermaid.render(id, content).then(result => {
        graph.innerHTML = result.svg
      })
    }
  }
  const graphs = document.getElementsByClassName('mermaid')
  if (document.getElementsByClassName('mermaid').length > 0) {
    renderDiagrams(graphs)
  }
</script>
