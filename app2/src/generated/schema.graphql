schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

type Request {
  address: String!
  id: Int!
  time: String!
  txHash: String
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [String!]

  """does the array contain the given value"""
  _contains: [String!]
  _eq: [String!]
  _gt: [String!]
  _gte: [String!]
  _in: [[String!]!]
  _is_null: Boolean
  _lt: [String!]
  _lte: [String!]
  _neq: [String!]
  _nin: [[String!]!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

"""
columns and relationships of "dashboard.count_by_chain_type"
"""
type dashboard_count_by_chain_type {
  count: String
  phase: String
  universal_chain_id: String
}

"""
Boolean expression to filter rows from the table "dashboard.count_by_chain_type". All fields are combined with a logical 'AND'.
"""
input dashboard_count_by_chain_type_bool_exp {
  _and: [dashboard_count_by_chain_type_bool_exp!]
  _not: dashboard_count_by_chain_type_bool_exp
  _or: [dashboard_count_by_chain_type_bool_exp!]
  count: String_comparison_exp
  phase: String_comparison_exp
  universal_chain_id: String_comparison_exp
}

"""
Ordering options when selecting data from "dashboard.count_by_chain_type".
"""
input dashboard_count_by_chain_type_order_by {
  count: order_by
  phase: order_by
  universal_chain_id: order_by
}

"""
select columns of table "dashboard.count_by_chain_type"
"""
enum dashboard_count_by_chain_type_select_column {
  """column name"""
  count

  """column name"""
  phase

  """column name"""
  universal_chain_id
}

"""
columns and relationships of "dashboard.days_by_chain_type"
"""
type dashboard_days_by_chain_type {
  day_count: String
  universal_chain_id: String
}

"""
Boolean expression to filter rows from the table "dashboard.days_by_chain_type". All fields are combined with a logical 'AND'.
"""
input dashboard_days_by_chain_type_bool_exp {
  _and: [dashboard_days_by_chain_type_bool_exp!]
  _not: dashboard_days_by_chain_type_bool_exp
  _or: [dashboard_days_by_chain_type_bool_exp!]
  day_count: String_comparison_exp
  universal_chain_id: String_comparison_exp
}

"""
Ordering options when selecting data from "dashboard.days_by_chain_type".
"""
input dashboard_days_by_chain_type_order_by {
  day_count: order_by
  universal_chain_id: order_by
}

"""
select columns of table "dashboard.days_by_chain_type"
"""
enum dashboard_days_by_chain_type_select_column {
  """column name"""
  day_count

  """column name"""
  universal_chain_id
}

input dashboard_transfer_count_by_chain_args {
  p_addresses_dashboard: jsonb
  p_phase: String
}

input dashboard_transfer_days_count_by_chain_args {
  p_addresses_dashboard: jsonb
}

scalar date

"""
Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

type drip_dropMutation {
  send(address: String!, captchaToken: String!, chainId: String!, denom: String!): String!
}

type drip_dropQuery {
  handledTransfers(limit: Int, offsetTime: String): [Request!]!
  transfersForAddress(address: String!, limit: Int, offsetTime: String): [Request!]!
  unhandledTransfers(limit: Int, offsetTime: String): [Request!]!
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

scalar latency_percentiles_scalar

"""
Boolean expression to compare columns of type "latency_percentiles_scalar". All fields are combined with logical 'AND'.
"""
input latency_percentiles_scalar_comparison_exp {
  _eq: latency_percentiles_scalar
  _gt: latency_percentiles_scalar
  _gte: latency_percentiles_scalar
  _in: [latency_percentiles_scalar!]
  _is_null: Boolean
  _lt: latency_percentiles_scalar
  _lte: latency_percentiles_scalar
  _neq: latency_percentiles_scalar
  _nin: [latency_percentiles_scalar!]
}

"""mutation root"""
type mutation_root {
  drip_drop: drip_dropMutation
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  execute function "dashboard.transfer_count_by_chain" which returns "dashboard.count_by_chain_type"
  """
  dashboard_transfer_count_by_chain(
    """
    input parameters for function "dashboard_transfer_count_by_chain"
    """
    args: dashboard_transfer_count_by_chain_args!

    """distinct select on columns"""
    distinct_on: [dashboard_count_by_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_count_by_chain_type_order_by!]

    """filter the rows returned"""
    where: dashboard_count_by_chain_type_bool_exp
  ): [dashboard_count_by_chain_type!]!

  """
  execute function "dashboard.transfer_days_count_by_chain" which returns "dashboard.days_by_chain_type"
  """
  dashboard_transfer_days_count_by_chain(
    """
    input parameters for function "dashboard_transfer_days_count_by_chain"
    """
    args: dashboard_transfer_days_count_by_chain_args!

    """distinct select on columns"""
    distinct_on: [dashboard_days_by_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_days_by_chain_type_order_by!]

    """filter the rows returned"""
    where: dashboard_days_by_chain_type_bool_exp
  ): [dashboard_days_by_chain_type!]!
  drip_drop: drip_dropQuery

  """
  execute function "v2.chains" which returns "v2.chain_type"
  """
  v2_chains(
    """
    input parameters for function "v2_chains"
    """
    args: v2_chains_args

    """distinct select on columns"""
    distinct_on: [v2_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_chain_type_order_by!]

    """filter the rows returned"""
    where: v2_chain_type_bool_exp
  ): [v2_chain_type!]!

  """
  execute function "v2.channels" which returns "v2.channel_type"
  """
  v2_channels(
    """
    input parameters for function "v2_channels"
    """
    args: v2_channels_args

    """distinct select on columns"""
    distinct_on: [v2_channel_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_channel_type_order_by!]

    """filter the rows returned"""
    where: v2_channel_type_bool_exp
  ): [v2_channel_type!]!

  """
  execute function "v2.clients" which returns "v2.client_type"
  """
  v2_clients(
    """
    input parameters for function "v2_clients"
    """
    args: v2_clients_args

    """distinct select on columns"""
    distinct_on: [v2_client_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_client_type_order_by!]

    """filter the rows returned"""
    where: v2_client_type_bool_exp
  ): [v2_client_type!]!

  """
  execute function "v2.connections" which returns "v2.connection_type"
  """
  v2_connections(
    """
    input parameters for function "v2_connections"
    """
    args: v2_connections_args

    """distinct select on columns"""
    distinct_on: [v2_connection_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_connection_type_order_by!]

    """filter the rows returned"""
    where: v2_connection_type_bool_exp
  ): [v2_connection_type!]!

  """
  fetch data from the table: "v2.error_type"
  """
  v2_error_type(
    """distinct select on columns"""
    distinct_on: [v2_error_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_error_type_order_by!]

    """filter the rows returned"""
    where: v2_error_type_bool_exp
  ): [v2_error_type!]!

  """
  execute function "v2.errors" which returns "v2.error_type"
  """
  v2_errors(
    """distinct select on columns"""
    distinct_on: [v2_error_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_error_type_order_by!]

    """filter the rows returned"""
    where: v2_error_type_bool_exp
  ): [v2_error_type!]!

  """
  execute function "v2.health_check" which returns "v2.health_check_type"
  """
  v2_health_check(
    """distinct select on columns"""
    distinct_on: [v2_health_check_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_health_check_type_order_by!]

    """filter the rows returned"""
    where: v2_health_check_type_bool_exp
  ): [v2_health_check_type!]!

  """
  execute function "v2.packets" which returns "v2.packet_type"
  """
  v2_packets(
    """
    input parameters for function "v2_packets"
    """
    args: v2_packets_args

    """distinct select on columns"""
    distinct_on: [v2_packet_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_packet_type_order_by!]

    """filter the rows returned"""
    where: v2_packet_type_bool_exp
  ): [v2_packet_type!]!

  """
  execute function "v2.stats_count" which returns "v2.stats_type"
  """
  v2_stats_count(
    """distinct select on columns"""
    distinct_on: [v2_stats_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_type_bool_exp
  ): [v2_stats_type!]!

  """
  execute function "v2.stats_latency" which returns "v2.stats_latency_type"
  """
  v2_stats_latency(
    """
    input parameters for function "v2_stats_latency"
    """
    args: v2_stats_latency_args!

    """distinct select on columns"""
    distinct_on: [v2_stats_latency_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_latency_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_latency_type_bool_exp
  ): [v2_stats_latency_type!]!

  """
  execute function "v2.stats_packets_chain" which returns "v2.stats_packets_chain_type"
  """
  v2_stats_packets_chain(
    """
    input parameters for function "v2_stats_packets_chain"
    """
    args: v2_stats_packets_chain_args

    """distinct select on columns"""
    distinct_on: [v2_stats_packets_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_packets_chain_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_packets_chain_type_bool_exp
  ): [v2_stats_packets_chain_type!]!

  """
  execute function "v2.stats_packets_daily_count" which returns "v2.stats_daily_count_type"
  """
  v2_stats_packets_daily_count(
    """
    input parameters for function "v2_stats_packets_daily_count"
    """
    args: v2_stats_packets_daily_count_args

    """distinct select on columns"""
    distinct_on: [v2_stats_daily_count_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_daily_count_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_daily_count_type_bool_exp
  ): [v2_stats_daily_count_type!]!

  """
  execute function "v2.stats_transfers_address" which returns "v2.stats_transfers_address_type"
  """
  v2_stats_transfers_address(
    """
    input parameters for function "v2_stats_transfers_address"
    """
    args: v2_stats_transfers_address_args!

    """distinct select on columns"""
    distinct_on: [v2_stats_transfers_address_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_transfers_address_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_transfers_address_type_bool_exp
  ): [v2_stats_transfers_address_type!]!

  """
  execute function "v2.stats_transfers_chain" which returns "v2.stats_transfers_chain_type"
  """
  v2_stats_transfers_chain(
    """
    input parameters for function "v2_stats_transfers_chain"
    """
    args: v2_stats_transfers_chain_args

    """distinct select on columns"""
    distinct_on: [v2_stats_transfers_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_transfers_chain_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_transfers_chain_type_bool_exp
  ): [v2_stats_transfers_chain_type!]!

  """
  execute function "v2.stats_transfers_daily_count" which returns "v2.stats_daily_count_type"
  """
  v2_stats_transfers_daily_count(
    """
    input parameters for function "v2_stats_transfers_daily_count"
    """
    args: v2_stats_transfers_daily_count_args

    """distinct select on columns"""
    distinct_on: [v2_stats_daily_count_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_daily_count_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_daily_count_type_bool_exp
  ): [v2_stats_daily_count_type!]!

  """
  execute function "v2.tokens" which returns "v2.token_meta"
  """
  v2_tokens(
    """
    input parameters for function "v2_tokens"
    """
    args: v2_tokens_args

    """distinct select on columns"""
    distinct_on: [v2_token_meta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_token_meta_order_by!]

    """filter the rows returned"""
    where: v2_token_meta_bool_exp
  ): [v2_token_meta!]!

  """
  execute function "v2.transfers" which returns "v2.transfer_type"
  """
  v2_transfers(
    """
    input parameters for function "v2_transfers"
    """
    args: v2_transfers_args

    """distinct select on columns"""
    distinct_on: [v2_transfer_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_transfer_type_order_by!]

    """filter the rows returned"""
    where: v2_transfer_type_bool_exp
  ): [v2_transfer_type!]!

  """
  execute function "v2.util_get_address_types_for_display_address" which returns "v2.util_get_address_types_for_display_address_type"
  """
  v2_util_get_address_types_for_display_address(
    """
    input parameters for function "v2_util_get_address_types_for_display_address"
    """
    args: v2_util_get_address_types_for_display_address_args!

    """distinct select on columns"""
    distinct_on: [v2_util_get_address_types_for_display_address_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_util_get_address_types_for_display_address_type_order_by!]

    """filter the rows returned"""
    where: v2_util_get_address_types_for_display_address_type_bool_exp
  ): [v2_util_get_address_types_for_display_address_type!]!

  """
  execute function "v2.util_get_transfer_request_details" which returns "v2.util_get_transfer_request_details_type"
  """
  v2_util_get_transfer_request_details(
    """
    input parameters for function "v2_util_get_transfer_request_details"
    """
    args: v2_util_get_transfer_request_details_args!

    """distinct select on columns"""
    distinct_on: [v2_util_get_transfer_request_details_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_util_get_transfer_request_details_type_order_by!]

    """filter the rows returned"""
    where: v2_util_get_transfer_request_details_type_bool_exp
  ): [v2_util_get_transfer_request_details_type!]!
}

type subscription_root {
  """
  execute function "dashboard.transfer_count_by_chain" which returns "dashboard.count_by_chain_type"
  """
  dashboard_transfer_count_by_chain(
    """
    input parameters for function "dashboard_transfer_count_by_chain"
    """
    args: dashboard_transfer_count_by_chain_args!

    """distinct select on columns"""
    distinct_on: [dashboard_count_by_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_count_by_chain_type_order_by!]

    """filter the rows returned"""
    where: dashboard_count_by_chain_type_bool_exp
  ): [dashboard_count_by_chain_type!]!

  """
  execute function "dashboard.transfer_days_count_by_chain" which returns "dashboard.days_by_chain_type"
  """
  dashboard_transfer_days_count_by_chain(
    """
    input parameters for function "dashboard_transfer_days_count_by_chain"
    """
    args: dashboard_transfer_days_count_by_chain_args!

    """distinct select on columns"""
    distinct_on: [dashboard_days_by_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_days_by_chain_type_order_by!]

    """filter the rows returned"""
    where: dashboard_days_by_chain_type_bool_exp
  ): [dashboard_days_by_chain_type!]!

  """
  execute function "v2.chains" which returns "v2.chain_type"
  """
  v2_chains(
    """
    input parameters for function "v2_chains"
    """
    args: v2_chains_args

    """distinct select on columns"""
    distinct_on: [v2_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_chain_type_order_by!]

    """filter the rows returned"""
    where: v2_chain_type_bool_exp
  ): [v2_chain_type!]!

  """
  execute function "v2.channels" which returns "v2.channel_type"
  """
  v2_channels(
    """
    input parameters for function "v2_channels"
    """
    args: v2_channels_args

    """distinct select on columns"""
    distinct_on: [v2_channel_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_channel_type_order_by!]

    """filter the rows returned"""
    where: v2_channel_type_bool_exp
  ): [v2_channel_type!]!

  """
  execute function "v2.clients" which returns "v2.client_type"
  """
  v2_clients(
    """
    input parameters for function "v2_clients"
    """
    args: v2_clients_args

    """distinct select on columns"""
    distinct_on: [v2_client_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_client_type_order_by!]

    """filter the rows returned"""
    where: v2_client_type_bool_exp
  ): [v2_client_type!]!

  """
  execute function "v2.connections" which returns "v2.connection_type"
  """
  v2_connections(
    """
    input parameters for function "v2_connections"
    """
    args: v2_connections_args

    """distinct select on columns"""
    distinct_on: [v2_connection_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_connection_type_order_by!]

    """filter the rows returned"""
    where: v2_connection_type_bool_exp
  ): [v2_connection_type!]!

  """
  fetch data from the table: "v2.error_type"
  """
  v2_error_type(
    """distinct select on columns"""
    distinct_on: [v2_error_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_error_type_order_by!]

    """filter the rows returned"""
    where: v2_error_type_bool_exp
  ): [v2_error_type!]!

  """
  fetch data from the table in a streaming manner: "v2.error_type"
  """
  v2_error_type_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v2_error_type_stream_cursor_input]!

    """filter the rows returned"""
    where: v2_error_type_bool_exp
  ): [v2_error_type!]!

  """
  execute function "v2.errors" which returns "v2.error_type"
  """
  v2_errors(
    """distinct select on columns"""
    distinct_on: [v2_error_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_error_type_order_by!]

    """filter the rows returned"""
    where: v2_error_type_bool_exp
  ): [v2_error_type!]!

  """
  execute function "v2.health_check" which returns "v2.health_check_type"
  """
  v2_health_check(
    """distinct select on columns"""
    distinct_on: [v2_health_check_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_health_check_type_order_by!]

    """filter the rows returned"""
    where: v2_health_check_type_bool_exp
  ): [v2_health_check_type!]!

  """
  execute function "v2.packets" which returns "v2.packet_type"
  """
  v2_packets(
    """
    input parameters for function "v2_packets"
    """
    args: v2_packets_args

    """distinct select on columns"""
    distinct_on: [v2_packet_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_packet_type_order_by!]

    """filter the rows returned"""
    where: v2_packet_type_bool_exp
  ): [v2_packet_type!]!

  """
  execute function "v2.stats_count" which returns "v2.stats_type"
  """
  v2_stats_count(
    """distinct select on columns"""
    distinct_on: [v2_stats_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_type_bool_exp
  ): [v2_stats_type!]!

  """
  execute function "v2.stats_latency" which returns "v2.stats_latency_type"
  """
  v2_stats_latency(
    """
    input parameters for function "v2_stats_latency"
    """
    args: v2_stats_latency_args!

    """distinct select on columns"""
    distinct_on: [v2_stats_latency_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_latency_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_latency_type_bool_exp
  ): [v2_stats_latency_type!]!

  """
  execute function "v2.stats_packets_chain" which returns "v2.stats_packets_chain_type"
  """
  v2_stats_packets_chain(
    """
    input parameters for function "v2_stats_packets_chain"
    """
    args: v2_stats_packets_chain_args

    """distinct select on columns"""
    distinct_on: [v2_stats_packets_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_packets_chain_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_packets_chain_type_bool_exp
  ): [v2_stats_packets_chain_type!]!

  """
  execute function "v2.stats_packets_daily_count" which returns "v2.stats_daily_count_type"
  """
  v2_stats_packets_daily_count(
    """
    input parameters for function "v2_stats_packets_daily_count"
    """
    args: v2_stats_packets_daily_count_args

    """distinct select on columns"""
    distinct_on: [v2_stats_daily_count_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_daily_count_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_daily_count_type_bool_exp
  ): [v2_stats_daily_count_type!]!

  """
  execute function "v2.stats_transfers_address" which returns "v2.stats_transfers_address_type"
  """
  v2_stats_transfers_address(
    """
    input parameters for function "v2_stats_transfers_address"
    """
    args: v2_stats_transfers_address_args!

    """distinct select on columns"""
    distinct_on: [v2_stats_transfers_address_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_transfers_address_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_transfers_address_type_bool_exp
  ): [v2_stats_transfers_address_type!]!

  """
  execute function "v2.stats_transfers_chain" which returns "v2.stats_transfers_chain_type"
  """
  v2_stats_transfers_chain(
    """
    input parameters for function "v2_stats_transfers_chain"
    """
    args: v2_stats_transfers_chain_args

    """distinct select on columns"""
    distinct_on: [v2_stats_transfers_chain_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_transfers_chain_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_transfers_chain_type_bool_exp
  ): [v2_stats_transfers_chain_type!]!

  """
  execute function "v2.stats_transfers_daily_count" which returns "v2.stats_daily_count_type"
  """
  v2_stats_transfers_daily_count(
    """
    input parameters for function "v2_stats_transfers_daily_count"
    """
    args: v2_stats_transfers_daily_count_args

    """distinct select on columns"""
    distinct_on: [v2_stats_daily_count_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_stats_daily_count_type_order_by!]

    """filter the rows returned"""
    where: v2_stats_daily_count_type_bool_exp
  ): [v2_stats_daily_count_type!]!

  """
  execute function "v2.tokens" which returns "v2.token_meta"
  """
  v2_tokens(
    """
    input parameters for function "v2_tokens"
    """
    args: v2_tokens_args

    """distinct select on columns"""
    distinct_on: [v2_token_meta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_token_meta_order_by!]

    """filter the rows returned"""
    where: v2_token_meta_bool_exp
  ): [v2_token_meta!]!

  """
  execute function "v2.transfers" which returns "v2.transfer_type"
  """
  v2_transfers(
    """
    input parameters for function "v2_transfers"
    """
    args: v2_transfers_args

    """distinct select on columns"""
    distinct_on: [v2_transfer_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_transfer_type_order_by!]

    """filter the rows returned"""
    where: v2_transfer_type_bool_exp
  ): [v2_transfer_type!]!

  """
  execute function "v2.util_get_address_types_for_display_address" which returns "v2.util_get_address_types_for_display_address_type"
  """
  v2_util_get_address_types_for_display_address(
    """
    input parameters for function "v2_util_get_address_types_for_display_address"
    """
    args: v2_util_get_address_types_for_display_address_args!

    """distinct select on columns"""
    distinct_on: [v2_util_get_address_types_for_display_address_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_util_get_address_types_for_display_address_type_order_by!]

    """filter the rows returned"""
    where: v2_util_get_address_types_for_display_address_type_bool_exp
  ): [v2_util_get_address_types_for_display_address_type!]!

  """
  execute function "v2.util_get_transfer_request_details" which returns "v2.util_get_transfer_request_details_type"
  """
  v2_util_get_transfer_request_details(
    """
    input parameters for function "v2_util_get_transfer_request_details"
    """
    args: v2_util_get_transfer_request_details_args!

    """distinct select on columns"""
    distinct_on: [v2_util_get_transfer_request_details_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_util_get_transfer_request_details_type_order_by!]

    """filter the rows returned"""
    where: v2_util_get_transfer_request_details_type_bool_exp
  ): [v2_util_get_transfer_request_details_type!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "v2.chain_features"
"""
type v2_chain_features {
  channel_list: Boolean
  connection_list: Boolean
  environment: String
  index_status: Boolean
  packet_list: Boolean
  transfer_list: Boolean
  transfer_submission: Boolean
}

"""
order by aggregate values of table "v2.chain_features"
"""
input v2_chain_features_aggregate_order_by {
  count: order_by
  max: v2_chain_features_max_order_by
  min: v2_chain_features_min_order_by
}

"""
Boolean expression to filter rows from the table "v2.chain_features". All fields are combined with a logical 'AND'.
"""
input v2_chain_features_bool_exp {
  _and: [v2_chain_features_bool_exp!]
  _not: v2_chain_features_bool_exp
  _or: [v2_chain_features_bool_exp!]
  channel_list: Boolean_comparison_exp
  connection_list: Boolean_comparison_exp
  environment: String_comparison_exp
  index_status: Boolean_comparison_exp
  packet_list: Boolean_comparison_exp
  transfer_list: Boolean_comparison_exp
  transfer_submission: Boolean_comparison_exp
}

"""
order by max() on columns of table "v2.chain_features"
"""
input v2_chain_features_max_order_by {
  environment: order_by
}

"""
order by min() on columns of table "v2.chain_features"
"""
input v2_chain_features_min_order_by {
  environment: order_by
}

"""Ordering options when selecting data from "v2.chain_features"."""
input v2_chain_features_order_by {
  channel_list: order_by
  connection_list: order_by
  environment: order_by
  index_status: order_by
  packet_list: order_by
  transfer_list: order_by
  transfer_submission: order_by
}

"""
select columns of table "v2.chain_features"
"""
enum v2_chain_features_select_column {
  """column name"""
  channel_list

  """column name"""
  connection_list

  """column name"""
  environment

  """column name"""
  index_status

  """column name"""
  packet_list

  """column name"""
  transfer_list

  """column name"""
  transfer_submission
}

"""
columns and relationships of "v2.chain_status_type"
"""
type v2_chain_status_type {
  height: String
  status: String
  timestamp: timestamptz
  tip_age_seconds: Int
}

"""
order by aggregate values of table "v2.chain_status_type"
"""
input v2_chain_status_type_aggregate_order_by {
  avg: v2_chain_status_type_avg_order_by
  count: order_by
  max: v2_chain_status_type_max_order_by
  min: v2_chain_status_type_min_order_by
  stddev: v2_chain_status_type_stddev_order_by
  stddev_pop: v2_chain_status_type_stddev_pop_order_by
  stddev_samp: v2_chain_status_type_stddev_samp_order_by
  sum: v2_chain_status_type_sum_order_by
  var_pop: v2_chain_status_type_var_pop_order_by
  var_samp: v2_chain_status_type_var_samp_order_by
  variance: v2_chain_status_type_variance_order_by
}

"""
order by avg() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_avg_order_by {
  tip_age_seconds: order_by
}

"""
Boolean expression to filter rows from the table "v2.chain_status_type". All fields are combined with a logical 'AND'.
"""
input v2_chain_status_type_bool_exp {
  _and: [v2_chain_status_type_bool_exp!]
  _not: v2_chain_status_type_bool_exp
  _or: [v2_chain_status_type_bool_exp!]
  height: String_comparison_exp
  status: String_comparison_exp
  timestamp: timestamptz_comparison_exp
  tip_age_seconds: Int_comparison_exp
}

"""
order by max() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_max_order_by {
  height: order_by
  status: order_by
  timestamp: order_by
  tip_age_seconds: order_by
}

"""
order by min() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_min_order_by {
  height: order_by
  status: order_by
  timestamp: order_by
  tip_age_seconds: order_by
}

"""Ordering options when selecting data from "v2.chain_status_type"."""
input v2_chain_status_type_order_by {
  height: order_by
  status: order_by
  timestamp: order_by
  tip_age_seconds: order_by
}

"""
select columns of table "v2.chain_status_type"
"""
enum v2_chain_status_type_select_column {
  """column name"""
  height

  """column name"""
  status

  """column name"""
  timestamp

  """column name"""
  tip_age_seconds
}

"""
order by stddev() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_stddev_order_by {
  tip_age_seconds: order_by
}

"""
order by stddev_pop() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_stddev_pop_order_by {
  tip_age_seconds: order_by
}

"""
order by stddev_samp() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_stddev_samp_order_by {
  tip_age_seconds: order_by
}

"""
order by sum() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_sum_order_by {
  tip_age_seconds: order_by
}

"""
order by var_pop() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_var_pop_order_by {
  tip_age_seconds: order_by
}

"""
order by var_samp() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_var_samp_order_by {
  tip_age_seconds: order_by
}

"""
order by variance() on columns of table "v2.chain_status_type"
"""
input v2_chain_status_type_variance_order_by {
  tip_age_seconds: order_by
}

"""
columns and relationships of "v2.chain_type"
"""
type v2_chain_type {
  addr_prefix: String
  chain_id: String
  display_name: String

  """An array relationship"""
  explorers(
    """distinct select on columns"""
    distinct_on: [v2_explorers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_explorers_order_by!]

    """filter the rows returned"""
    where: v2_explorers_bool_exp
  ): [v2_explorers!]!

  """An array relationship"""
  features(
    """distinct select on columns"""
    distinct_on: [v2_chain_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_chain_features_order_by!]

    """filter the rows returned"""
    where: v2_chain_features_bool_exp
  ): [v2_chain_features!]!
  logo_uri: String
  rpc_type: String

  """An array relationship"""
  rpcs(
    """distinct select on columns"""
    distinct_on: [v2_rpcs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_rpcs_order_by!]

    """filter the rows returned"""
    where: v2_rpcs_bool_exp
  ): [v2_rpcs!]!

  """
  A computed field, executes function "v2.chain_status"
  """
  status(
    """distinct select on columns"""
    distinct_on: [v2_chain_status_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_chain_status_type_order_by!]

    """filter the rows returned"""
    where: v2_chain_status_type_bool_exp
  ): [v2_chain_status_type!]
  testnet: Boolean
  universal_chain_id: String
}

"""
Boolean expression to filter rows from the table "v2.chain_type". All fields are combined with a logical 'AND'.
"""
input v2_chain_type_bool_exp {
  _and: [v2_chain_type_bool_exp!]
  _not: v2_chain_type_bool_exp
  _or: [v2_chain_type_bool_exp!]
  addr_prefix: String_comparison_exp
  chain_id: String_comparison_exp
  display_name: String_comparison_exp
  explorers: v2_explorers_bool_exp
  features: v2_chain_features_bool_exp
  logo_uri: String_comparison_exp
  rpc_type: String_comparison_exp
  rpcs: v2_rpcs_bool_exp
  status: v2_chain_status_type_bool_exp
  testnet: Boolean_comparison_exp
  universal_chain_id: String_comparison_exp
}

"""Ordering options when selecting data from "v2.chain_type"."""
input v2_chain_type_order_by {
  addr_prefix: order_by
  chain_id: order_by
  display_name: order_by
  explorers_aggregate: v2_explorers_aggregate_order_by
  features_aggregate: v2_chain_features_aggregate_order_by
  logo_uri: order_by
  rpc_type: order_by
  rpcs_aggregate: v2_rpcs_aggregate_order_by
  status_aggregate: v2_chain_status_type_aggregate_order_by
  testnet: order_by
  universal_chain_id: order_by
}

"""
select columns of table "v2.chain_type"
"""
enum v2_chain_type_select_column {
  """column name"""
  addr_prefix

  """column name"""
  chain_id

  """column name"""
  display_name

  """column name"""
  logo_uri

  """column name"""
  rpc_type

  """column name"""
  testnet

  """column name"""
  universal_chain_id
}

input v2_chains_args {
  p_comparison: String
  p_limit: Int
  p_sort_order: String
  p_universal_chain_id: String
}

"""
columns and relationships of "v2.chains_view"
"""
type v2_chains_view {
  addr_prefix: String
  chain_id: String
  display_name: String
  logo_uri: String
  rpc_type: String
  testnet: Boolean
  universal_chain_id: String
}

"""
Boolean expression to filter rows from the table "v2.chains_view". All fields are combined with a logical 'AND'.
"""
input v2_chains_view_bool_exp {
  _and: [v2_chains_view_bool_exp!]
  _not: v2_chains_view_bool_exp
  _or: [v2_chains_view_bool_exp!]
  addr_prefix: String_comparison_exp
  chain_id: String_comparison_exp
  display_name: String_comparison_exp
  logo_uri: String_comparison_exp
  rpc_type: String_comparison_exp
  testnet: Boolean_comparison_exp
  universal_chain_id: String_comparison_exp
}

"""Ordering options when selecting data from "v2.chains_view"."""
input v2_chains_view_order_by {
  addr_prefix: order_by
  chain_id: order_by
  display_name: order_by
  logo_uri: order_by
  rpc_type: order_by
  testnet: order_by
  universal_chain_id: order_by
}

"""
columns and relationships of "v2.channel_type"
"""
type v2_channel_type {
  """An object relationship"""
  destination_chain: v2_chains_view
  destination_channel_id: Int
  destination_client_id: Int
  destination_connection_id: Int
  destination_port_id: String
  destination_universal_chain_id: String
  sort_order: String

  """An object relationship"""
  source_chain: v2_chains_view
  source_channel_id: Int
  source_client_id: Int
  source_connection_id: Int
  source_port_id: String
  source_universal_chain_id: String
  tags: [String!]
  version: String
}

"""
Boolean expression to filter rows from the table "v2.channel_type". All fields are combined with a logical 'AND'.
"""
input v2_channel_type_bool_exp {
  _and: [v2_channel_type_bool_exp!]
  _not: v2_channel_type_bool_exp
  _or: [v2_channel_type_bool_exp!]
  destination_chain: v2_chains_view_bool_exp
  destination_channel_id: Int_comparison_exp
  destination_client_id: Int_comparison_exp
  destination_connection_id: Int_comparison_exp
  destination_port_id: String_comparison_exp
  destination_universal_chain_id: String_comparison_exp
  sort_order: String_comparison_exp
  source_chain: v2_chains_view_bool_exp
  source_channel_id: Int_comparison_exp
  source_client_id: Int_comparison_exp
  source_connection_id: Int_comparison_exp
  source_port_id: String_comparison_exp
  source_universal_chain_id: String_comparison_exp
  tags: String_array_comparison_exp
  version: String_comparison_exp
}

"""Ordering options when selecting data from "v2.channel_type"."""
input v2_channel_type_order_by {
  destination_chain: v2_chains_view_order_by
  destination_channel_id: order_by
  destination_client_id: order_by
  destination_connection_id: order_by
  destination_port_id: order_by
  destination_universal_chain_id: order_by
  sort_order: order_by
  source_chain: v2_chains_view_order_by
  source_channel_id: order_by
  source_client_id: order_by
  source_connection_id: order_by
  source_port_id: order_by
  source_universal_chain_id: order_by
  tags: order_by
  version: order_by
}

"""
select columns of table "v2.channel_type"
"""
enum v2_channel_type_select_column {
  """column name"""
  destination_channel_id

  """column name"""
  destination_client_id

  """column name"""
  destination_connection_id

  """column name"""
  destination_port_id

  """column name"""
  destination_universal_chain_id

  """column name"""
  sort_order

  """column name"""
  source_channel_id

  """column name"""
  source_client_id

  """column name"""
  source_connection_id

  """column name"""
  source_port_id

  """column name"""
  source_universal_chain_id

  """column name"""
  tags

  """column name"""
  version
}

input v2_channels_args {
  p_comparison: String
  p_destination_channel_id: Int
  p_destination_client_id: Int
  p_destination_connection_id: Int
  p_destination_port_id: String
  p_destination_universal_chain_id: String
  p_limit: Int
  p_recommended: Boolean
  p_sort_order: String
  p_source_channel_id: Int
  p_source_client_id: Int
  p_source_connection_id: Int
  p_source_port_id: String
  p_source_universal_chain_id: String
  p_tags: jsonb
  p_version: String
}

"""
columns and relationships of "v2.client_type"
"""
type v2_client_type {
  client_id: Int
  counterparty_universal_chain_id: String
  sort_order: String
  universal_chain_id: String
}

"""
Boolean expression to filter rows from the table "v2.client_type". All fields are combined with a logical 'AND'.
"""
input v2_client_type_bool_exp {
  _and: [v2_client_type_bool_exp!]
  _not: v2_client_type_bool_exp
  _or: [v2_client_type_bool_exp!]
  client_id: Int_comparison_exp
  counterparty_universal_chain_id: String_comparison_exp
  sort_order: String_comparison_exp
  universal_chain_id: String_comparison_exp
}

"""Ordering options when selecting data from "v2.client_type"."""
input v2_client_type_order_by {
  client_id: order_by
  counterparty_universal_chain_id: order_by
  sort_order: order_by
  universal_chain_id: order_by
}

"""
select columns of table "v2.client_type"
"""
enum v2_client_type_select_column {
  """column name"""
  client_id

  """column name"""
  counterparty_universal_chain_id

  """column name"""
  sort_order

  """column name"""
  universal_chain_id
}

input v2_clients_args {
  p_client_id: Int
  p_comparison: String
  p_counterparty_universal_chain_id: String
  p_limit: Int
  p_sort_order: String
  p_universal_chain_id: String
}

"""
columns and relationships of "v2.connection_type"
"""
type v2_connection_type {
  """An object relationship"""
  destination_chain: v2_chains_view
  destination_client_id: Int
  destination_connection_id: Int
  destination_universal_chain_id: String
  sort_order: String

  """An object relationship"""
  source_chain: v2_chains_view
  source_client_id: Int
  source_connection_id: Int
  source_universal_chain_id: String
}

"""
Boolean expression to filter rows from the table "v2.connection_type". All fields are combined with a logical 'AND'.
"""
input v2_connection_type_bool_exp {
  _and: [v2_connection_type_bool_exp!]
  _not: v2_connection_type_bool_exp
  _or: [v2_connection_type_bool_exp!]
  destination_chain: v2_chains_view_bool_exp
  destination_client_id: Int_comparison_exp
  destination_connection_id: Int_comparison_exp
  destination_universal_chain_id: String_comparison_exp
  sort_order: String_comparison_exp
  source_chain: v2_chains_view_bool_exp
  source_client_id: Int_comparison_exp
  source_connection_id: Int_comparison_exp
  source_universal_chain_id: String_comparison_exp
}

"""Ordering options when selecting data from "v2.connection_type"."""
input v2_connection_type_order_by {
  destination_chain: v2_chains_view_order_by
  destination_client_id: order_by
  destination_connection_id: order_by
  destination_universal_chain_id: order_by
  sort_order: order_by
  source_chain: v2_chains_view_order_by
  source_client_id: order_by
  source_connection_id: order_by
  source_universal_chain_id: order_by
}

"""
select columns of table "v2.connection_type"
"""
enum v2_connection_type_select_column {
  """column name"""
  destination_client_id

  """column name"""
  destination_connection_id

  """column name"""
  destination_universal_chain_id

  """column name"""
  sort_order

  """column name"""
  source_client_id

  """column name"""
  source_connection_id

  """column name"""
  source_universal_chain_id
}

input v2_connections_args {
  p_comparison: String
  p_destination_client_id: Int
  p_destination_connection_id: Int
  p_destination_universal_chain_id: String
  p_limit: Int
  p_sort_order: String
  p_source_client_id: Int
  p_source_connection_id: Int
  p_source_universal_chain_id: String
}

"""
columns and relationships of "v2.error_type"
"""
type v2_error_type {
  detail: String
  hint: String
  message: String
  union_error_code: String
}

"""
Boolean expression to filter rows from the table "v2.error_type". All fields are combined with a logical 'AND'.
"""
input v2_error_type_bool_exp {
  _and: [v2_error_type_bool_exp!]
  _not: v2_error_type_bool_exp
  _or: [v2_error_type_bool_exp!]
  detail: String_comparison_exp
  hint: String_comparison_exp
  message: String_comparison_exp
  union_error_code: String_comparison_exp
}

"""Ordering options when selecting data from "v2.error_type"."""
input v2_error_type_order_by {
  detail: order_by
  hint: order_by
  message: order_by
  union_error_code: order_by
}

"""
select columns of table "v2.error_type"
"""
enum v2_error_type_select_column {
  """column name"""
  detail

  """column name"""
  hint

  """column name"""
  message

  """column name"""
  union_error_code
}

"""
Streaming cursor of the table "v2_error_type"
"""
input v2_error_type_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v2_error_type_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v2_error_type_stream_cursor_value_input {
  detail: String
  hint: String
  message: String
  union_error_code: String
}

"""
columns and relationships of "v2.explorers"
"""
type v2_explorers {
  address_url: String
  block_url: String
  description: String
  display_name: String
  home_url: String
  logo_uri: String
  name: String
  tx_url: String
}

"""
order by aggregate values of table "v2.explorers"
"""
input v2_explorers_aggregate_order_by {
  count: order_by
  max: v2_explorers_max_order_by
  min: v2_explorers_min_order_by
}

"""
Boolean expression to filter rows from the table "v2.explorers". All fields are combined with a logical 'AND'.
"""
input v2_explorers_bool_exp {
  _and: [v2_explorers_bool_exp!]
  _not: v2_explorers_bool_exp
  _or: [v2_explorers_bool_exp!]
  address_url: String_comparison_exp
  block_url: String_comparison_exp
  description: String_comparison_exp
  display_name: String_comparison_exp
  home_url: String_comparison_exp
  logo_uri: String_comparison_exp
  name: String_comparison_exp
  tx_url: String_comparison_exp
}

"""
order by max() on columns of table "v2.explorers"
"""
input v2_explorers_max_order_by {
  address_url: order_by
  block_url: order_by
  description: order_by
  display_name: order_by
  home_url: order_by
  logo_uri: order_by
  name: order_by
  tx_url: order_by
}

"""
order by min() on columns of table "v2.explorers"
"""
input v2_explorers_min_order_by {
  address_url: order_by
  block_url: order_by
  description: order_by
  display_name: order_by
  home_url: order_by
  logo_uri: order_by
  name: order_by
  tx_url: order_by
}

"""Ordering options when selecting data from "v2.explorers"."""
input v2_explorers_order_by {
  address_url: order_by
  block_url: order_by
  description: order_by
  display_name: order_by
  home_url: order_by
  logo_uri: order_by
  name: order_by
  tx_url: order_by
}

"""
select columns of table "v2.explorers"
"""
enum v2_explorers_select_column {
  """column name"""
  address_url

  """column name"""
  block_url

  """column name"""
  description

  """column name"""
  display_name

  """column name"""
  home_url

  """column name"""
  logo_uri

  """column name"""
  name

  """column name"""
  tx_url
}

"""
columns and relationships of "v2.health_check_type"
"""
type v2_health_check_type {
  environment: String
  last_update: timestamptz
  status: String
}

"""
Boolean expression to filter rows from the table "v2.health_check_type". All fields are combined with a logical 'AND'.
"""
input v2_health_check_type_bool_exp {
  _and: [v2_health_check_type_bool_exp!]
  _not: v2_health_check_type_bool_exp
  _or: [v2_health_check_type_bool_exp!]
  environment: String_comparison_exp
  last_update: timestamptz_comparison_exp
  status: String_comparison_exp
}

"""Ordering options when selecting data from "v2.health_check_type"."""
input v2_health_check_type_order_by {
  environment: order_by
  last_update: order_by
  status: order_by
}

"""
select columns of table "v2.health_check_type"
"""
enum v2_health_check_type_select_column {
  """column name"""
  environment

  """column name"""
  last_update

  """column name"""
  status
}

"""
columns and relationships of "v2.packet_type"
"""
type v2_packet_type {
  acknowledgement: String
  channel_version: String
  data: String
  decoded(
    """JSON select path"""
    path: String
  ): jsonb
  decoded_flattened(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  destination_chain: v2_chains_view
  destination_chain_id: String
  destination_channel_id: Int
  destination_client_id: Int
  destination_connection_id: Int
  destination_port_id: String
  destination_universal_chain_id: String
  packet_ack_block_hash: String
  packet_ack_height: String
  packet_ack_maker: String
  packet_ack_timestamp: timestamptz
  packet_ack_transaction_hash: String
  packet_hash: String
  packet_recv_block_hash: String
  packet_recv_height: String
  packet_recv_maker: String
  packet_recv_maker_msg: String
  packet_recv_timestamp: timestamptz
  packet_recv_transaction_hash: String
  packet_send_block_hash: String
  packet_send_height: String
  packet_send_timestamp: timestamptz
  packet_send_transaction_hash: String
  packet_timeout_block_hash: String
  packet_timeout_height: String
  packet_timeout_maker: String
  packet_timeout_timestamp: timestamptz
  packet_timeout_transaction_hash: String
  sort_order: String

  """An object relationship"""
  source_chain: v2_chains_view
  source_channel_id: Int
  source_client_id: Int
  source_connection_id: Int
  source_port_id: String
  source_universal_chain_id: String
  status: String
  success: Boolean
  timeout_height: String
  timeout_timestamp: String

  """
  A computed field, executes function "v2.packet_traces"
  """
  traces(
    """distinct select on columns"""
    distinct_on: [v2_traces_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_traces_type_order_by!]

    """filter the rows returned"""
    where: v2_traces_type_bool_exp
  ): [v2_traces_type!]
  write_ack_block_hash: String
  write_ack_height: String
  write_ack_timestamp: timestamptz
  write_ack_transaction_hash: String
}

"""
Boolean expression to filter rows from the table "v2.packet_type". All fields are combined with a logical 'AND'.
"""
input v2_packet_type_bool_exp {
  _and: [v2_packet_type_bool_exp!]
  _not: v2_packet_type_bool_exp
  _or: [v2_packet_type_bool_exp!]
  acknowledgement: String_comparison_exp
  channel_version: String_comparison_exp
  data: String_comparison_exp
  decoded: jsonb_comparison_exp
  decoded_flattened: jsonb_comparison_exp
  destination_chain: v2_chains_view_bool_exp
  destination_chain_id: String_comparison_exp
  destination_channel_id: Int_comparison_exp
  destination_client_id: Int_comparison_exp
  destination_connection_id: Int_comparison_exp
  destination_port_id: String_comparison_exp
  destination_universal_chain_id: String_comparison_exp
  packet_ack_block_hash: String_comparison_exp
  packet_ack_height: String_comparison_exp
  packet_ack_maker: String_comparison_exp
  packet_ack_timestamp: timestamptz_comparison_exp
  packet_ack_transaction_hash: String_comparison_exp
  packet_hash: String_comparison_exp
  packet_recv_block_hash: String_comparison_exp
  packet_recv_height: String_comparison_exp
  packet_recv_maker: String_comparison_exp
  packet_recv_maker_msg: String_comparison_exp
  packet_recv_timestamp: timestamptz_comparison_exp
  packet_recv_transaction_hash: String_comparison_exp
  packet_send_block_hash: String_comparison_exp
  packet_send_height: String_comparison_exp
  packet_send_timestamp: timestamptz_comparison_exp
  packet_send_transaction_hash: String_comparison_exp
  packet_timeout_block_hash: String_comparison_exp
  packet_timeout_height: String_comparison_exp
  packet_timeout_maker: String_comparison_exp
  packet_timeout_timestamp: timestamptz_comparison_exp
  packet_timeout_transaction_hash: String_comparison_exp
  sort_order: String_comparison_exp
  source_chain: v2_chains_view_bool_exp
  source_channel_id: Int_comparison_exp
  source_client_id: Int_comparison_exp
  source_connection_id: Int_comparison_exp
  source_port_id: String_comparison_exp
  source_universal_chain_id: String_comparison_exp
  status: String_comparison_exp
  success: Boolean_comparison_exp
  timeout_height: String_comparison_exp
  timeout_timestamp: String_comparison_exp
  traces: v2_traces_type_bool_exp
  write_ack_block_hash: String_comparison_exp
  write_ack_height: String_comparison_exp
  write_ack_timestamp: timestamptz_comparison_exp
  write_ack_transaction_hash: String_comparison_exp
}

"""Ordering options when selecting data from "v2.packet_type"."""
input v2_packet_type_order_by {
  acknowledgement: order_by
  channel_version: order_by
  data: order_by
  decoded: order_by
  decoded_flattened: order_by
  destination_chain: v2_chains_view_order_by
  destination_chain_id: order_by
  destination_channel_id: order_by
  destination_client_id: order_by
  destination_connection_id: order_by
  destination_port_id: order_by
  destination_universal_chain_id: order_by
  packet_ack_block_hash: order_by
  packet_ack_height: order_by
  packet_ack_maker: order_by
  packet_ack_timestamp: order_by
  packet_ack_transaction_hash: order_by
  packet_hash: order_by
  packet_recv_block_hash: order_by
  packet_recv_height: order_by
  packet_recv_maker: order_by
  packet_recv_maker_msg: order_by
  packet_recv_timestamp: order_by
  packet_recv_transaction_hash: order_by
  packet_send_block_hash: order_by
  packet_send_height: order_by
  packet_send_timestamp: order_by
  packet_send_transaction_hash: order_by
  packet_timeout_block_hash: order_by
  packet_timeout_height: order_by
  packet_timeout_maker: order_by
  packet_timeout_timestamp: order_by
  packet_timeout_transaction_hash: order_by
  sort_order: order_by
  source_chain: v2_chains_view_order_by
  source_channel_id: order_by
  source_client_id: order_by
  source_connection_id: order_by
  source_port_id: order_by
  source_universal_chain_id: order_by
  status: order_by
  success: order_by
  timeout_height: order_by
  timeout_timestamp: order_by
  traces_aggregate: v2_traces_type_aggregate_order_by
  write_ack_block_hash: order_by
  write_ack_height: order_by
  write_ack_timestamp: order_by
  write_ack_transaction_hash: order_by
}

"""
select columns of table "v2.packet_type"
"""
enum v2_packet_type_select_column {
  """column name"""
  acknowledgement

  """column name"""
  channel_version

  """column name"""
  data

  """column name"""
  decoded

  """column name"""
  decoded_flattened

  """column name"""
  destination_chain_id

  """column name"""
  destination_channel_id

  """column name"""
  destination_client_id

  """column name"""
  destination_connection_id

  """column name"""
  destination_port_id

  """column name"""
  destination_universal_chain_id

  """column name"""
  packet_ack_block_hash

  """column name"""
  packet_ack_height

  """column name"""
  packet_ack_maker

  """column name"""
  packet_ack_timestamp

  """column name"""
  packet_ack_transaction_hash

  """column name"""
  packet_hash

  """column name"""
  packet_recv_block_hash

  """column name"""
  packet_recv_height

  """column name"""
  packet_recv_maker

  """column name"""
  packet_recv_maker_msg

  """column name"""
  packet_recv_timestamp

  """column name"""
  packet_recv_transaction_hash

  """column name"""
  packet_send_block_hash

  """column name"""
  packet_send_height

  """column name"""
  packet_send_timestamp

  """column name"""
  packet_send_transaction_hash

  """column name"""
  packet_timeout_block_hash

  """column name"""
  packet_timeout_height

  """column name"""
  packet_timeout_maker

  """column name"""
  packet_timeout_timestamp

  """column name"""
  packet_timeout_transaction_hash

  """column name"""
  sort_order

  """column name"""
  source_channel_id

  """column name"""
  source_client_id

  """column name"""
  source_connection_id

  """column name"""
  source_port_id

  """column name"""
  source_universal_chain_id

  """column name"""
  status

  """column name"""
  success

  """column name"""
  timeout_height

  """column name"""
  timeout_timestamp

  """column name"""
  write_ack_block_hash

  """column name"""
  write_ack_height

  """column name"""
  write_ack_timestamp

  """column name"""
  write_ack_transaction_hash
}

input v2_packets_args {
  p_block_hash: String
  p_comparison: String
  p_destination_universal_chain_id: String
  p_limit: Int
  p_packet_hash: String
  p_packet_send_timestamp: timestamptz
  p_sort_order: String
  p_source_universal_chain_id: String
  p_transaction_hash: String
}

"""
columns and relationships of "v2.rpcs"
"""
type v2_rpcs {
  type: String
  url: String
}

"""
order by aggregate values of table "v2.rpcs"
"""
input v2_rpcs_aggregate_order_by {
  count: order_by
  max: v2_rpcs_max_order_by
  min: v2_rpcs_min_order_by
}

"""
Boolean expression to filter rows from the table "v2.rpcs". All fields are combined with a logical 'AND'.
"""
input v2_rpcs_bool_exp {
  _and: [v2_rpcs_bool_exp!]
  _not: v2_rpcs_bool_exp
  _or: [v2_rpcs_bool_exp!]
  type: String_comparison_exp
  url: String_comparison_exp
}

"""
order by max() on columns of table "v2.rpcs"
"""
input v2_rpcs_max_order_by {
  type: order_by
  url: order_by
}

"""
order by min() on columns of table "v2.rpcs"
"""
input v2_rpcs_min_order_by {
  type: order_by
  url: order_by
}

"""Ordering options when selecting data from "v2.rpcs"."""
input v2_rpcs_order_by {
  type: order_by
  url: order_by
}

"""
select columns of table "v2.rpcs"
"""
enum v2_rpcs_select_column {
  """column name"""
  type

  """column name"""
  url
}

"""
columns and relationships of "v2.stats_daily_count_type"
"""
type v2_stats_daily_count_type {
  count: String
  day_date: date
}

"""
Boolean expression to filter rows from the table "v2.stats_daily_count_type". All fields are combined with a logical 'AND'.
"""
input v2_stats_daily_count_type_bool_exp {
  _and: [v2_stats_daily_count_type_bool_exp!]
  _not: v2_stats_daily_count_type_bool_exp
  _or: [v2_stats_daily_count_type_bool_exp!]
  count: String_comparison_exp
  day_date: date_comparison_exp
}

"""Ordering options when selecting data from "v2.stats_daily_count_type"."""
input v2_stats_daily_count_type_order_by {
  count: order_by
  day_date: order_by
}

"""
select columns of table "v2.stats_daily_count_type"
"""
enum v2_stats_daily_count_type_select_column {
  """column name"""
  count

  """column name"""
  day_date
}

input v2_stats_latency_args {
  p_destination_universal_chain_id: String
  p_phase: String
  p_source_universal_chain_id: String
}

"""
columns and relationships of "v2.stats_latency_type"
"""
type v2_stats_latency_type {
  secs_until_packet_ack: latency_percentiles_scalar
  secs_until_packet_recv: latency_percentiles_scalar
  secs_until_write_ack: latency_percentiles_scalar
}

"""
Boolean expression to filter rows from the table "v2.stats_latency_type". All fields are combined with a logical 'AND'.
"""
input v2_stats_latency_type_bool_exp {
  _and: [v2_stats_latency_type_bool_exp!]
  _not: v2_stats_latency_type_bool_exp
  _or: [v2_stats_latency_type_bool_exp!]
  secs_until_packet_ack: latency_percentiles_scalar_comparison_exp
  secs_until_packet_recv: latency_percentiles_scalar_comparison_exp
  secs_until_write_ack: latency_percentiles_scalar_comparison_exp
}

"""Ordering options when selecting data from "v2.stats_latency_type"."""
input v2_stats_latency_type_order_by {
  secs_until_packet_ack: order_by
  secs_until_packet_recv: order_by
  secs_until_write_ack: order_by
}

"""
select columns of table "v2.stats_latency_type"
"""
enum v2_stats_latency_type_select_column {
  """column name"""
  secs_until_packet_ack

  """column name"""
  secs_until_packet_recv

  """column name"""
  secs_until_write_ack
}

input v2_stats_packets_chain_args {
  p_days_back: Int
  p_destination_universal_chain_id: String
  p_source_universal_chain_id: String
}

"""
columns and relationships of "v2.stats_packets_chain_type"
"""
type v2_stats_packets_chain_type {
  day_date: date
  destination_universal_chain_id: String
  source_universal_chain_id: String
  total_packets: String
}

"""
Boolean expression to filter rows from the table "v2.stats_packets_chain_type". All fields are combined with a logical 'AND'.
"""
input v2_stats_packets_chain_type_bool_exp {
  _and: [v2_stats_packets_chain_type_bool_exp!]
  _not: v2_stats_packets_chain_type_bool_exp
  _or: [v2_stats_packets_chain_type_bool_exp!]
  day_date: date_comparison_exp
  destination_universal_chain_id: String_comparison_exp
  source_universal_chain_id: String_comparison_exp
  total_packets: String_comparison_exp
}

"""
Ordering options when selecting data from "v2.stats_packets_chain_type".
"""
input v2_stats_packets_chain_type_order_by {
  day_date: order_by
  destination_universal_chain_id: order_by
  source_universal_chain_id: order_by
  total_packets: order_by
}

"""
select columns of table "v2.stats_packets_chain_type"
"""
enum v2_stats_packets_chain_type_select_column {
  """column name"""
  day_date

  """column name"""
  destination_universal_chain_id

  """column name"""
  source_universal_chain_id

  """column name"""
  total_packets
}

input v2_stats_packets_daily_count_args {
  p_days_back: Int
}

input v2_stats_transfers_address_args {
  p_addresses_canonical: jsonb
  p_days_back: Int
  p_destination_universal_chain_id: String
  p_source_universal_chain_id: String
}

"""
columns and relationships of "v2.stats_transfers_address_type"
"""
type v2_stats_transfers_address_type {
  canonical_address: String
  day_date: date
  destination_universal_chain_id: String
  source_universal_chain_id: String
  transfer_count: String
}

"""
Boolean expression to filter rows from the table "v2.stats_transfers_address_type". All fields are combined with a logical 'AND'.
"""
input v2_stats_transfers_address_type_bool_exp {
  _and: [v2_stats_transfers_address_type_bool_exp!]
  _not: v2_stats_transfers_address_type_bool_exp
  _or: [v2_stats_transfers_address_type_bool_exp!]
  canonical_address: String_comparison_exp
  day_date: date_comparison_exp
  destination_universal_chain_id: String_comparison_exp
  source_universal_chain_id: String_comparison_exp
  transfer_count: String_comparison_exp
}

"""
Ordering options when selecting data from "v2.stats_transfers_address_type".
"""
input v2_stats_transfers_address_type_order_by {
  canonical_address: order_by
  day_date: order_by
  destination_universal_chain_id: order_by
  source_universal_chain_id: order_by
  transfer_count: order_by
}

"""
select columns of table "v2.stats_transfers_address_type"
"""
enum v2_stats_transfers_address_type_select_column {
  """column name"""
  canonical_address

  """column name"""
  day_date

  """column name"""
  destination_universal_chain_id

  """column name"""
  source_universal_chain_id

  """column name"""
  transfer_count
}

input v2_stats_transfers_chain_args {
  p_days_back: Int
  p_destination_universal_chain_id: String
  p_source_universal_chain_id: String
}

"""
columns and relationships of "v2.stats_transfers_chain_type"
"""
type v2_stats_transfers_chain_type {
  day_date: date
  destination_universal_chain_id: String
  source_universal_chain_id: String
  total_transfers: String
}

"""
Boolean expression to filter rows from the table "v2.stats_transfers_chain_type". All fields are combined with a logical 'AND'.
"""
input v2_stats_transfers_chain_type_bool_exp {
  _and: [v2_stats_transfers_chain_type_bool_exp!]
  _not: v2_stats_transfers_chain_type_bool_exp
  _or: [v2_stats_transfers_chain_type_bool_exp!]
  day_date: date_comparison_exp
  destination_universal_chain_id: String_comparison_exp
  source_universal_chain_id: String_comparison_exp
  total_transfers: String_comparison_exp
}

"""
Ordering options when selecting data from "v2.stats_transfers_chain_type".
"""
input v2_stats_transfers_chain_type_order_by {
  day_date: order_by
  destination_universal_chain_id: order_by
  source_universal_chain_id: order_by
  total_transfers: order_by
}

"""
select columns of table "v2.stats_transfers_chain_type"
"""
enum v2_stats_transfers_chain_type_select_column {
  """column name"""
  day_date

  """column name"""
  destination_universal_chain_id

  """column name"""
  source_universal_chain_id

  """column name"""
  total_transfers
}

input v2_stats_transfers_daily_count_args {
  p_days_back: Int
}

"""
columns and relationships of "v2.stats_type"
"""
type v2_stats_type {
  name: String
  value: String
}

"""
Boolean expression to filter rows from the table "v2.stats_type". All fields are combined with a logical 'AND'.
"""
input v2_stats_type_bool_exp {
  _and: [v2_stats_type_bool_exp!]
  _not: v2_stats_type_bool_exp
  _or: [v2_stats_type_bool_exp!]
  name: String_comparison_exp
  value: String_comparison_exp
}

"""Ordering options when selecting data from "v2.stats_type"."""
input v2_stats_type_order_by {
  name: order_by
  value: order_by
}

"""
select columns of table "v2.stats_type"
"""
enum v2_stats_type_select_column {
  """column name"""
  name

  """column name"""
  value
}

"""
columns and relationships of "v2.token_meta"
"""
type v2_token_meta {
  """An object relationship"""
  chain: v2_chains_view
  denom: String
  rank: Int

  """An array relationship"""
  representations(
    """distinct select on columns"""
    distinct_on: [v2_token_meta_representations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_token_meta_representations_order_by!]

    """filter the rows returned"""
    where: v2_token_meta_representations_bool_exp
  ): [v2_token_meta_representations!]!

  """An array relationship"""
  wrapping(
    """distinct select on columns"""
    distinct_on: [v2_token_meta_wrapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_token_meta_wrapping_order_by!]

    """filter the rows returned"""
    where: v2_token_meta_wrapping_bool_exp
  ): [v2_token_meta_wrapping!]!
}

"""
Boolean expression to filter rows from the table "v2.token_meta". All fields are combined with a logical 'AND'.
"""
input v2_token_meta_bool_exp {
  _and: [v2_token_meta_bool_exp!]
  _not: v2_token_meta_bool_exp
  _or: [v2_token_meta_bool_exp!]
  chain: v2_chains_view_bool_exp
  denom: String_comparison_exp
  rank: Int_comparison_exp
  representations: v2_token_meta_representations_bool_exp
  wrapping: v2_token_meta_wrapping_bool_exp
}

"""Ordering options when selecting data from "v2.token_meta"."""
input v2_token_meta_order_by {
  chain: v2_chains_view_order_by
  denom: order_by
  rank: order_by
  representations_aggregate: v2_token_meta_representations_aggregate_order_by
  wrapping_aggregate: v2_token_meta_wrapping_aggregate_order_by
}

"""
columns and relationships of "v2.token_meta_representation_sources"
"""
type v2_token_meta_representation_sources {
  """An object relationship"""
  chain: v2_chains_view
  decimals: Int
  denom: String
  name: String

  """An object relationship"""
  source: v2_token_meta_sources
  symbol: String
  update_timestamp: timestamptz

  """An array relationship"""
  wrapping(
    """distinct select on columns"""
    distinct_on: [v2_token_meta_representation_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_token_meta_representation_sources_order_by!]

    """filter the rows returned"""
    where: v2_token_meta_representation_sources_bool_exp
  ): [v2_token_meta_representation_sources!]!
}

"""
order by aggregate values of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_aggregate_order_by {
  avg: v2_token_meta_representation_sources_avg_order_by
  count: order_by
  max: v2_token_meta_representation_sources_max_order_by
  min: v2_token_meta_representation_sources_min_order_by
  stddev: v2_token_meta_representation_sources_stddev_order_by
  stddev_pop: v2_token_meta_representation_sources_stddev_pop_order_by
  stddev_samp: v2_token_meta_representation_sources_stddev_samp_order_by
  sum: v2_token_meta_representation_sources_sum_order_by
  var_pop: v2_token_meta_representation_sources_var_pop_order_by
  var_samp: v2_token_meta_representation_sources_var_samp_order_by
  variance: v2_token_meta_representation_sources_variance_order_by
}

"""
order by avg() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_avg_order_by {
  decimals: order_by
}

"""
Boolean expression to filter rows from the table "v2.token_meta_representation_sources". All fields are combined with a logical 'AND'.
"""
input v2_token_meta_representation_sources_bool_exp {
  _and: [v2_token_meta_representation_sources_bool_exp!]
  _not: v2_token_meta_representation_sources_bool_exp
  _or: [v2_token_meta_representation_sources_bool_exp!]
  chain: v2_chains_view_bool_exp
  decimals: Int_comparison_exp
  denom: String_comparison_exp
  name: String_comparison_exp
  source: v2_token_meta_sources_bool_exp
  symbol: String_comparison_exp
  update_timestamp: timestamptz_comparison_exp
  wrapping: v2_token_meta_representation_sources_bool_exp
}

"""
order by max() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_max_order_by {
  decimals: order_by
  denom: order_by
  name: order_by
  symbol: order_by
  update_timestamp: order_by
}

"""
order by min() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_min_order_by {
  decimals: order_by
  denom: order_by
  name: order_by
  symbol: order_by
  update_timestamp: order_by
}

"""
Ordering options when selecting data from "v2.token_meta_representation_sources".
"""
input v2_token_meta_representation_sources_order_by {
  chain: v2_chains_view_order_by
  decimals: order_by
  denom: order_by
  name: order_by
  source: v2_token_meta_sources_order_by
  symbol: order_by
  update_timestamp: order_by
  wrapping_aggregate: v2_token_meta_representation_sources_aggregate_order_by
}

"""
select columns of table "v2.token_meta_representation_sources"
"""
enum v2_token_meta_representation_sources_select_column {
  """column name"""
  decimals

  """column name"""
  denom

  """column name"""
  name

  """column name"""
  symbol

  """column name"""
  update_timestamp
}

"""
order by stddev() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_stddev_order_by {
  decimals: order_by
}

"""
order by stddev_pop() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_stddev_pop_order_by {
  decimals: order_by
}

"""
order by stddev_samp() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_stddev_samp_order_by {
  decimals: order_by
}

"""
order by sum() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_sum_order_by {
  decimals: order_by
}

"""
order by var_pop() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_var_pop_order_by {
  decimals: order_by
}

"""
order by var_samp() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_var_samp_order_by {
  decimals: order_by
}

"""
order by variance() on columns of table "v2.token_meta_representation_sources"
"""
input v2_token_meta_representation_sources_variance_order_by {
  decimals: order_by
}

"""
columns and relationships of "v2.token_meta_representations"
"""
type v2_token_meta_representations {
  """An object relationship"""
  chain: v2_chains_view
  decimals: Int
  logo_uri: String
  name: String

  """An array relationship"""
  sources(
    """distinct select on columns"""
    distinct_on: [v2_token_meta_representation_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_token_meta_representation_sources_order_by!]

    """filter the rows returned"""
    where: v2_token_meta_representation_sources_bool_exp
  ): [v2_token_meta_representation_sources!]!
  symbol: String
}

"""
order by aggregate values of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_aggregate_order_by {
  avg: v2_token_meta_representations_avg_order_by
  count: order_by
  max: v2_token_meta_representations_max_order_by
  min: v2_token_meta_representations_min_order_by
  stddev: v2_token_meta_representations_stddev_order_by
  stddev_pop: v2_token_meta_representations_stddev_pop_order_by
  stddev_samp: v2_token_meta_representations_stddev_samp_order_by
  sum: v2_token_meta_representations_sum_order_by
  var_pop: v2_token_meta_representations_var_pop_order_by
  var_samp: v2_token_meta_representations_var_samp_order_by
  variance: v2_token_meta_representations_variance_order_by
}

"""
order by avg() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_avg_order_by {
  decimals: order_by
}

"""
Boolean expression to filter rows from the table "v2.token_meta_representations". All fields are combined with a logical 'AND'.
"""
input v2_token_meta_representations_bool_exp {
  _and: [v2_token_meta_representations_bool_exp!]
  _not: v2_token_meta_representations_bool_exp
  _or: [v2_token_meta_representations_bool_exp!]
  chain: v2_chains_view_bool_exp
  decimals: Int_comparison_exp
  logo_uri: String_comparison_exp
  name: String_comparison_exp
  sources: v2_token_meta_representation_sources_bool_exp
  symbol: String_comparison_exp
}

"""
order by max() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_max_order_by {
  decimals: order_by
  logo_uri: order_by
  name: order_by
  symbol: order_by
}

"""
order by min() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_min_order_by {
  decimals: order_by
  logo_uri: order_by
  name: order_by
  symbol: order_by
}

"""
Ordering options when selecting data from "v2.token_meta_representations".
"""
input v2_token_meta_representations_order_by {
  chain: v2_chains_view_order_by
  decimals: order_by
  logo_uri: order_by
  name: order_by
  sources_aggregate: v2_token_meta_representation_sources_aggregate_order_by
  symbol: order_by
}

"""
select columns of table "v2.token_meta_representations"
"""
enum v2_token_meta_representations_select_column {
  """column name"""
  decimals

  """column name"""
  logo_uri

  """column name"""
  name

  """column name"""
  symbol
}

"""
order by stddev() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_stddev_order_by {
  decimals: order_by
}

"""
order by stddev_pop() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_stddev_pop_order_by {
  decimals: order_by
}

"""
order by stddev_samp() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_stddev_samp_order_by {
  decimals: order_by
}

"""
order by sum() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_sum_order_by {
  decimals: order_by
}

"""
order by var_pop() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_var_pop_order_by {
  decimals: order_by
}

"""
order by var_samp() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_var_samp_order_by {
  decimals: order_by
}

"""
order by variance() on columns of table "v2.token_meta_representations"
"""
input v2_token_meta_representations_variance_order_by {
  decimals: order_by
}

"""
select columns of table "v2.token_meta"
"""
enum v2_token_meta_select_column {
  """column name"""
  denom

  """column name"""
  rank
}

"""
columns and relationships of "v2.token_meta_sources"
"""
type v2_token_meta_sources {
  logo_uri: String
  name: String
  source_uri: String
}

"""
Boolean expression to filter rows from the table "v2.token_meta_sources". All fields are combined with a logical 'AND'.
"""
input v2_token_meta_sources_bool_exp {
  _and: [v2_token_meta_sources_bool_exp!]
  _not: v2_token_meta_sources_bool_exp
  _or: [v2_token_meta_sources_bool_exp!]
  logo_uri: String_comparison_exp
  name: String_comparison_exp
  source_uri: String_comparison_exp
}

"""Ordering options when selecting data from "v2.token_meta_sources"."""
input v2_token_meta_sources_order_by {
  logo_uri: order_by
  name: order_by
  source_uri: order_by
}

"""
columns and relationships of "v2.token_meta_wrapping"
"""
type v2_token_meta_wrapping {
  destination_channel_id: Int

  """An object relationship"""
  unwrapped_chain: v2_chains_view
  unwrapped_denom: String

  """An object relationship"""
  wrapped_chain: v2_chains_view
  wrapper: String
}

"""
order by aggregate values of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_aggregate_order_by {
  avg: v2_token_meta_wrapping_avg_order_by
  count: order_by
  max: v2_token_meta_wrapping_max_order_by
  min: v2_token_meta_wrapping_min_order_by
  stddev: v2_token_meta_wrapping_stddev_order_by
  stddev_pop: v2_token_meta_wrapping_stddev_pop_order_by
  stddev_samp: v2_token_meta_wrapping_stddev_samp_order_by
  sum: v2_token_meta_wrapping_sum_order_by
  var_pop: v2_token_meta_wrapping_var_pop_order_by
  var_samp: v2_token_meta_wrapping_var_samp_order_by
  variance: v2_token_meta_wrapping_variance_order_by
}

"""
order by avg() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_avg_order_by {
  destination_channel_id: order_by
}

"""
Boolean expression to filter rows from the table "v2.token_meta_wrapping". All fields are combined with a logical 'AND'.
"""
input v2_token_meta_wrapping_bool_exp {
  _and: [v2_token_meta_wrapping_bool_exp!]
  _not: v2_token_meta_wrapping_bool_exp
  _or: [v2_token_meta_wrapping_bool_exp!]
  destination_channel_id: Int_comparison_exp
  unwrapped_chain: v2_chains_view_bool_exp
  unwrapped_denom: String_comparison_exp
  wrapped_chain: v2_chains_view_bool_exp
  wrapper: String_comparison_exp
}

"""
order by max() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_max_order_by {
  destination_channel_id: order_by
  unwrapped_denom: order_by
  wrapper: order_by
}

"""
order by min() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_min_order_by {
  destination_channel_id: order_by
  unwrapped_denom: order_by
  wrapper: order_by
}

"""Ordering options when selecting data from "v2.token_meta_wrapping"."""
input v2_token_meta_wrapping_order_by {
  destination_channel_id: order_by
  unwrapped_chain: v2_chains_view_order_by
  unwrapped_denom: order_by
  wrapped_chain: v2_chains_view_order_by
  wrapper: order_by
}

"""
select columns of table "v2.token_meta_wrapping"
"""
enum v2_token_meta_wrapping_select_column {
  """column name"""
  destination_channel_id

  """column name"""
  unwrapped_denom

  """column name"""
  wrapper
}

"""
order by stddev() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_stddev_order_by {
  destination_channel_id: order_by
}

"""
order by stddev_pop() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_stddev_pop_order_by {
  destination_channel_id: order_by
}

"""
order by stddev_samp() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_stddev_samp_order_by {
  destination_channel_id: order_by
}

"""
order by sum() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_sum_order_by {
  destination_channel_id: order_by
}

"""
order by var_pop() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_var_pop_order_by {
  destination_channel_id: order_by
}

"""
order by var_samp() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_var_samp_order_by {
  destination_channel_id: order_by
}

"""
order by variance() on columns of table "v2.token_meta_wrapping"
"""
input v2_token_meta_wrapping_variance_order_by {
  destination_channel_id: order_by
}

input v2_tokens_args {
  p_denom: String
  p_universal_chain_id: String
}

"""
columns and relationships of "v2.traces_type"
"""
type v2_traces_type {
  block_hash: String

  """An object relationship"""
  chain: v2_chains_view
  event_index: String
  height: String
  timestamp: timestamptz
  transaction_hash: String
  type: String
  universal_chain_id: String
}

"""
order by aggregate values of table "v2.traces_type"
"""
input v2_traces_type_aggregate_order_by {
  count: order_by
  max: v2_traces_type_max_order_by
  min: v2_traces_type_min_order_by
}

"""
Boolean expression to filter rows from the table "v2.traces_type". All fields are combined with a logical 'AND'.
"""
input v2_traces_type_bool_exp {
  _and: [v2_traces_type_bool_exp!]
  _not: v2_traces_type_bool_exp
  _or: [v2_traces_type_bool_exp!]
  block_hash: String_comparison_exp
  chain: v2_chains_view_bool_exp
  event_index: String_comparison_exp
  height: String_comparison_exp
  timestamp: timestamptz_comparison_exp
  transaction_hash: String_comparison_exp
  type: String_comparison_exp
  universal_chain_id: String_comparison_exp
}

"""
order by max() on columns of table "v2.traces_type"
"""
input v2_traces_type_max_order_by {
  block_hash: order_by
  event_index: order_by
  height: order_by
  timestamp: order_by
  transaction_hash: order_by
  type: order_by
  universal_chain_id: order_by
}

"""
order by min() on columns of table "v2.traces_type"
"""
input v2_traces_type_min_order_by {
  block_hash: order_by
  event_index: order_by
  height: order_by
  timestamp: order_by
  transaction_hash: order_by
  type: order_by
  universal_chain_id: order_by
}

"""Ordering options when selecting data from "v2.traces_type"."""
input v2_traces_type_order_by {
  block_hash: order_by
  chain: v2_chains_view_order_by
  event_index: order_by
  height: order_by
  timestamp: order_by
  transaction_hash: order_by
  type: order_by
  universal_chain_id: order_by
}

"""
select columns of table "v2.traces_type"
"""
enum v2_traces_type_select_column {
  """column name"""
  block_hash

  """column name"""
  event_index

  """column name"""
  height

  """column name"""
  timestamp

  """column name"""
  transaction_hash

  """column name"""
  type

  """column name"""
  universal_chain_id
}

"""
columns and relationships of "v2.transfer_type"
"""
type v2_transfer_type {
  base_amount: String
  base_token: String
  base_token_decimals: Int

  """An object relationship"""
  base_token_meta: v2_token_meta
  base_token_name: String
  base_token_path: String
  base_token_symbol: String

  """An object relationship"""
  destination_chain: v2_chains_view
  destination_universal_chain_id: String
  fee_amount: String
  fee_token: String

  """An object relationship"""
  fee_token_meta: v2_token_meta
  fee_type: String
  packet_hash: String
  packet_shape: String
  quote_amount: String
  quote_token: String

  """An object relationship"""
  quote_token_meta: v2_token_meta
  receiver_canonical: String
  receiver_display: String
  receiver_zkgm: String
  sender_canonical: String
  sender_display: String
  sender_zkgm: String
  sort_order: String

  """An object relationship"""
  source_chain: v2_chains_view
  source_universal_chain_id: String
  success: Boolean

  """
  A computed field, executes function "v2.transfer_traces"
  """
  traces(
    """distinct select on columns"""
    distinct_on: [v2_traces_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v2_traces_type_order_by!]

    """filter the rows returned"""
    where: v2_traces_type_bool_exp
  ): [v2_traces_type!]
  transfer_index: Int
  transfer_recv_timestamp: timestamptz
  transfer_recv_transaction_hash: String
  transfer_send_timestamp: timestamptz
  transfer_send_transaction_hash: String
  transfer_timeout_timestamp: timestamptz
  transfer_timeout_transaction_hash: String
  wrap_direction: String
}

"""
Boolean expression to filter rows from the table "v2.transfer_type". All fields are combined with a logical 'AND'.
"""
input v2_transfer_type_bool_exp {
  _and: [v2_transfer_type_bool_exp!]
  _not: v2_transfer_type_bool_exp
  _or: [v2_transfer_type_bool_exp!]
  base_amount: String_comparison_exp
  base_token: String_comparison_exp
  base_token_decimals: Int_comparison_exp
  base_token_meta: v2_token_meta_bool_exp
  base_token_name: String_comparison_exp
  base_token_path: String_comparison_exp
  base_token_symbol: String_comparison_exp
  destination_chain: v2_chains_view_bool_exp
  destination_universal_chain_id: String_comparison_exp
  fee_amount: String_comparison_exp
  fee_token: String_comparison_exp
  fee_token_meta: v2_token_meta_bool_exp
  fee_type: String_comparison_exp
  packet_hash: String_comparison_exp
  packet_shape: String_comparison_exp
  quote_amount: String_comparison_exp
  quote_token: String_comparison_exp
  quote_token_meta: v2_token_meta_bool_exp
  receiver_canonical: String_comparison_exp
  receiver_display: String_comparison_exp
  receiver_zkgm: String_comparison_exp
  sender_canonical: String_comparison_exp
  sender_display: String_comparison_exp
  sender_zkgm: String_comparison_exp
  sort_order: String_comparison_exp
  source_chain: v2_chains_view_bool_exp
  source_universal_chain_id: String_comparison_exp
  success: Boolean_comparison_exp
  traces: v2_traces_type_bool_exp
  transfer_index: Int_comparison_exp
  transfer_recv_timestamp: timestamptz_comparison_exp
  transfer_recv_transaction_hash: String_comparison_exp
  transfer_send_timestamp: timestamptz_comparison_exp
  transfer_send_transaction_hash: String_comparison_exp
  transfer_timeout_timestamp: timestamptz_comparison_exp
  transfer_timeout_transaction_hash: String_comparison_exp
  wrap_direction: String_comparison_exp
}

"""Ordering options when selecting data from "v2.transfer_type"."""
input v2_transfer_type_order_by {
  base_amount: order_by
  base_token: order_by
  base_token_decimals: order_by
  base_token_meta: v2_token_meta_order_by
  base_token_name: order_by
  base_token_path: order_by
  base_token_symbol: order_by
  destination_chain: v2_chains_view_order_by
  destination_universal_chain_id: order_by
  fee_amount: order_by
  fee_token: order_by
  fee_token_meta: v2_token_meta_order_by
  fee_type: order_by
  packet_hash: order_by
  packet_shape: order_by
  quote_amount: order_by
  quote_token: order_by
  quote_token_meta: v2_token_meta_order_by
  receiver_canonical: order_by
  receiver_display: order_by
  receiver_zkgm: order_by
  sender_canonical: order_by
  sender_display: order_by
  sender_zkgm: order_by
  sort_order: order_by
  source_chain: v2_chains_view_order_by
  source_universal_chain_id: order_by
  success: order_by
  traces_aggregate: v2_traces_type_aggregate_order_by
  transfer_index: order_by
  transfer_recv_timestamp: order_by
  transfer_recv_transaction_hash: order_by
  transfer_send_timestamp: order_by
  transfer_send_transaction_hash: order_by
  transfer_timeout_timestamp: order_by
  transfer_timeout_transaction_hash: order_by
  wrap_direction: order_by
}

"""
select columns of table "v2.transfer_type"
"""
enum v2_transfer_type_select_column {
  """column name"""
  base_amount

  """column name"""
  base_token

  """column name"""
  base_token_decimals

  """column name"""
  base_token_name

  """column name"""
  base_token_path

  """column name"""
  base_token_symbol

  """column name"""
  destination_universal_chain_id

  """column name"""
  fee_amount

  """column name"""
  fee_token

  """column name"""
  fee_type

  """column name"""
  packet_hash

  """column name"""
  packet_shape

  """column name"""
  quote_amount

  """column name"""
  quote_token

  """column name"""
  receiver_canonical

  """column name"""
  receiver_display

  """column name"""
  receiver_zkgm

  """column name"""
  sender_canonical

  """column name"""
  sender_display

  """column name"""
  sender_zkgm

  """column name"""
  sort_order

  """column name"""
  source_universal_chain_id

  """column name"""
  success

  """column name"""
  transfer_index

  """column name"""
  transfer_recv_timestamp

  """column name"""
  transfer_recv_transaction_hash

  """column name"""
  transfer_send_timestamp

  """column name"""
  transfer_send_transaction_hash

  """column name"""
  transfer_timeout_timestamp

  """column name"""
  transfer_timeout_transaction_hash

  """column name"""
  wrap_direction
}

input v2_transfers_args {
  p_addresses_canonical: jsonb
  p_block_hash: String
  p_comparison: String
  p_limit: Int
  p_packet_hash: String
  p_sort_order: String
  p_source_universal_chain_id: String
  p_transaction_hash: String
  p_transfer_index: Int
}

input v2_util_get_address_types_for_display_address_args {
  p_chain_type: String
  p_display_address: String
}

"""
columns and relationships of "v2.util_get_address_types_for_display_address_type"
"""
type v2_util_get_address_types_for_display_address_type {
  canonical: String
  display: String
  zkgm: String
}

"""
Boolean expression to filter rows from the table "v2.util_get_address_types_for_display_address_type". All fields are combined with a logical 'AND'.
"""
input v2_util_get_address_types_for_display_address_type_bool_exp {
  _and: [v2_util_get_address_types_for_display_address_type_bool_exp!]
  _not: v2_util_get_address_types_for_display_address_type_bool_exp
  _or: [v2_util_get_address_types_for_display_address_type_bool_exp!]
  canonical: String_comparison_exp
  display: String_comparison_exp
  zkgm: String_comparison_exp
}

"""
Ordering options when selecting data from "v2.util_get_address_types_for_display_address_type".
"""
input v2_util_get_address_types_for_display_address_type_order_by {
  canonical: order_by
  display: order_by
  zkgm: order_by
}

"""
select columns of table "v2.util_get_address_types_for_display_address_type"
"""
enum v2_util_get_address_types_for_display_address_type_select_column {
  """column name"""
  canonical

  """column name"""
  display

  """column name"""
  zkgm
}

input v2_util_get_transfer_request_details_args {
  p_base_token: String
  p_destination_universal_chain_id: String
  p_source_universal_chain_id: String
}

"""
columns and relationships of "v2.util_get_transfer_request_details_type"
"""
type v2_util_get_transfer_request_details_type {
  already_exists: Boolean
  destination_channel_id: Int
  quote_token: String
  source_channel_id: Int
  wrap_direction: String
}

"""
Boolean expression to filter rows from the table "v2.util_get_transfer_request_details_type". All fields are combined with a logical 'AND'.
"""
input v2_util_get_transfer_request_details_type_bool_exp {
  _and: [v2_util_get_transfer_request_details_type_bool_exp!]
  _not: v2_util_get_transfer_request_details_type_bool_exp
  _or: [v2_util_get_transfer_request_details_type_bool_exp!]
  already_exists: Boolean_comparison_exp
  destination_channel_id: Int_comparison_exp
  quote_token: String_comparison_exp
  source_channel_id: Int_comparison_exp
  wrap_direction: String_comparison_exp
}

"""
Ordering options when selecting data from "v2.util_get_transfer_request_details_type".
"""
input v2_util_get_transfer_request_details_type_order_by {
  already_exists: order_by
  destination_channel_id: order_by
  quote_token: order_by
  source_channel_id: order_by
  wrap_direction: order_by
}

"""
select columns of table "v2.util_get_transfer_request_details_type"
"""
enum v2_util_get_transfer_request_details_type_select_column {
  """column name"""
  already_exists

  """column name"""
  destination_channel_id

  """column name"""
  quote_token

  """column name"""
  source_channel_id

  """column name"""
  wrap_direction
}