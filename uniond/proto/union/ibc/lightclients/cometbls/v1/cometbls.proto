syntax = "proto3";

package union.ibc.lightclients.cometbls.v1;

option go_package = "union/app/ibc/cometbls/02-client/keeper";

import "tendermint/types/types.proto";
import "ibc/core/client/v1/client.proto";
import "ibc/core/commitment/v1/commitment.proto";
import "gogoproto/gogo.proto";

message ClientState {
  option (gogoproto.goproto_getters) = false;

  string chain_id = 1;
  // duration of the period since the LastestTimestamp during which the
  // submitted headers are valid for upgrade
  uint64 trusting_period = 2;
  // duration of the staking unbonding period
  uint64 unbonding_period = 3;
  // defines how much new (untrusted) header's Time can drift into the future.
  uint64 max_clock_drift = 4;
  // Block height when the client was frozen due to a misbehaviour
  .ibc.core.client.v1.Height frozen_height = 5 [(gogoproto.nullable) = false];
  // Latest height the client was updated to
  .ibc.core.client.v1.Height latest_height = 6 [(gogoproto.nullable) = false];
}

message ConsensusState {
  option (gogoproto.goproto_getters) = false;

  // timestamp that corresponds to the block height in which the ConsensusState
  // was stored.
  uint64 timestamp = 1;
  // commitment root (i.e app hash)
  .ibc.core.commitment.v1.MerkleRoot root = 2
        [(gogoproto.nullable) = false];
  bytes next_validators_hash = 3;
}

message Misbehaviour {
  Header header_1  = 1;
  Header header_2  = 2;
}

message Header {
  .tendermint.types.SignedHeader    signed_header                = 1;
  .ibc.core.client.v1.Height        trusted_height               = 2;
  bytes                             zero_knowledge_proof         = 3;
}
