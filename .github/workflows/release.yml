name: Release

on:
  push:
    tags: ['v[0-9]+\.[0-9]+\.[0-9]+\-rc[0-9]+', 'v[0-9]+\.[0-9]+\.[0-9]+']

jobs:
  build:
    uses: unionlabs/workflows/.github/workflows/build.yml@01e8e216f824ee8c196bab022711b7fb58d5b1e3
    secrets:
      nixbuild_token: ${{ secrets.nixbuild_token }}
      access-tokens: github.com=${{ secrets.GITHUB_TOKEN }}
    with:
      filter_builds: '(.top_attr == "packages") and (.system == "x86_64-linux" or .system == "aarch64-linux") and (.attr == "uniond-release" or .attr == "galoisd" or .attr == "uniond-release-image" or .attr == "galoisd-image" or .attr == "bundle-testnet-6-image")' # ensure to append this list if you want to release more artifacts

  dl-images:
    runs-on: ubuntu-latest
    needs: [build]
    permissions: write-all
    strategy:
      matrix:
        package: [ uniond-release, galoisd, bundle-testnet-6 ]
        system: [ aarch64-linux, x86_64-linux ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages.${{ matrix.system }}.${{ matrix.package }}-image
      - uses: nixbuild/nix-quick-install-action@v26
      - uses: nixbuild/nixbuild-action@master
        with:
          nixbuild_token: ${{ secrets.nixbuild_token }}
      - run: mkdir ${{ matrix.system }}
      - run: nix copy --to file://`pwd`/${{ matrix.system }} --from ssh-ng://eu.nixbuild.net `cat result.json | jq -r '.packages."${{ matrix.system }}"."${{ matrix.package }}-image".outputs.out'` --extra-experimental-features nix-command
      - run: cat ${{ matrix.system }}/nar/*.nar.xz | xz -dc | nix-store --restore ${{ matrix.system }}.${{ matrix.package }}-image
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.system }}.${{ matrix.package }}-image
          path: ${{ matrix.system }}.${{ matrix.package }}-image

  dl-bins:
    runs-on: ubuntu-latest
    needs: [build]
    permissions: write-all
    strategy:
      matrix:
        system: [ aarch64-linux, x86_64-linux ]
        package: [ uniond-release, galoisd ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages.${{ matrix.system }}.${{ matrix.package }}
      - uses: nixbuild/nix-quick-install-action@v26
      - uses: nixbuild/nixbuild-action@master
        with:
          nixbuild_token: ${{ secrets.nixbuild_token }}
      - run: mkdir ${{ matrix.system }}
      - run: |
          echo "Getting OUTPUT and NARINFO_NAME"
          OUTPUT=`cat result.json | jq -r '.packages."${{ matrix.system }}"."${{ matrix.package }}".outputs.out'`
          NARINFO_NAME=$(basename "$OUTPUT" | cut -d'-' -f1)

          echo "Copying artifacts from nixbuild.net"
          nix copy --to file://`pwd`/${{ matrix.system }} --from ssh-ng://eu.nixbuild.net $OUTPUT --extra-experimental-features nix-command

          echo "Get the NAR_URL"
          nar_url_line=$(cat ./${{ matrix.system }}/${NARINFO_NAME}.narinfo | grep "URL:")
          NAR_URL=$(echo "$nar_url_line" | cut -d " " -f 2-)

          echo "Restore the package from the NAR_URL archive"
          cat ${{ matrix.system }}/${NAR_URL} | xz -dc | nix-store --restore ${{ matrix.system }}.${{ matrix.package }}

          if [[ ${{ matrix.package }} =~ uniond-release ]]
          then
            mv ${{ matrix.system }}.${{ matrix.package }}/bin/uniond ${{ matrix.package }}-${{ matrix.system }}
          else
            mv ${{ matrix.system }}.${{ matrix.package }}/bin/${{ matrix.package }} ${{ matrix.package }}-${{ matrix.system }}
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ matrix.system }}
          path: ${{ matrix.package }}-${{ matrix.system }}

  docker-manifest:
    runs-on: ubuntu-latest
    needs: [ dl-images ]
    permissions: write-all
    strategy:
      matrix:
        package: [ uniond-release, galoisd, bundle-testnet-6 ]
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Download Images
      - name: Download aarch64-linux.${{ matrix.package }}-image
        uses: actions/download-artifact@v4
        with:
          name: aarch64-linux.${{ matrix.package }}-image
      - name: Download x86_64-linux.${{ matrix.package }}-image
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux.${{ matrix.package }}-image

      - name: Tag Docker Images
        run: |
          echo "Entering for loop"
          for arch in 'aarch64-linux' 'x86_64-linux'
          do
            echo "Tagging ${{matrix.package}} for $arch"
            dockerstring=$(docker load < $arch.${{ matrix.package }}-image)
            dockerstring=$(echo ${dockerstring##*':'})

            echo "Getting image ID for $dockerstring"
            imageid=$(docker images --format "{{.ID}}:{{.Tag}}" | grep $dockerstring)
            imageid=$(echo ${imageid%%':'*})

            echo "Tagging image"
            docker tag $imageid localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-$arch


            echo "${{ matrix.package }} for $arch is tagged"

            docker push localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-$arch

            echo "localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-$arch is pushed"
          done

      - name: Create Manifest
        run: |
          docker pull localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-aarch64-linux
          docker pull localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-x86_64-linux
          docker manifest create --insecure \
          localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }} \
          --amend localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-aarch64-linux \
          --amend localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}-x86_64-linux \
      - name: Push Manifest to Local Registry
        run: docker manifest push localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Annotate Manifest
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
          chmod 755 regctl && sudo cp ./regctl /usr/bin

          echo "downloaded & installed regctl"

          regctl registry set --tls disabled localhost:5000
          regctl image mod localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }} --to-oci --create ${{ github.ref_name }} --annotation org.opencontainers.image.description="$(cat $GITHUB_WORKSPACE/.github/container-descriptions/${{ matrix.package }}.txt)"

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy Manifest to GHCR
        run: |
          wget https://github.com/rapidsai/skopeo/releases/download/v1.12/skopeo-linux-amd64 -O ./skopeo
          chmod +x ./skopeo && sudo cp ./skopeo /usr/bin

          echo "Downloaded & installed skopeo"

          skopeo copy --multi-arch=all --insecure-policy --src-tls-verify=false "docker://localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}" "docker://ghcr.io/unionlabs/${{ matrix.package }}:${{ github.ref_name }}"

          echo "Copied ${{ matrix.package }}:${{ github.ref_name }} multi-arch to GHCR"
      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_AR_CRED_JSON }}
      - name: Set up GCP SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'
      - name: Configure docker to authinticate with GCP
        run: |
          gcloud auth configure-docker europe-docker.pkg.dev
      - name: Copy Manifest to GCP
        run: |
          if [[ "uniond-release" == ${{ matrix.package }} ]]; then
            skopeo copy --multi-arch=all --insecure-policy --src-tls-verify=false "docker://localhost:5000/unionlabs/${{ matrix.package }}:${{ github.ref_name }}" "docker://europe-docker.pkg.dev/model-envelope-401614/union-testnet/${{ matrix.package }}:${{ github.ref_name }}"
          fi


  release:
    runs-on: ubuntu-latest
    needs: [ docker-manifest, dl-bins ]
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - run: |
          semantic_version_tags=$(git tag --sort v:refname | grep -E 'v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$')

          current_semantic_version="${{github.ref_name}}"

          # Sort the list of tags in ascending order
          sorted_tags=($(printf "%s\n" "${semantic_version_tags[@]}" | sort -V))

          previous_semantic_version="${sorted_tags[-2]}"

          # Download & Install clog-tool/clog-cli
          wget https://github.com/clog-tool/clog-cli/releases/download/v0.9.3/clog-v0.9.3-x86_64-unknown-linux-gnu.tar.gz
          tar -xzf clog-v0.9.3-x86_64-unknown-linux-gnu.tar.gz
          chmod +x clog && sudo cp ./clog /usr/bin

          clog -s ${{github.ref_name}} --from $previous_semantic_version --to ${{github.ref_name}} > ${{github.ref_name}}-CHANGELOG.md
      - uses: actions/download-artifact@v4
      # NOTE: please ensure that the following two steps remain in sync, other than the
      # if condition, the `prerelease` value, and the name.
      - if: "contains(github.ref_name, 'rc')"
        name: 'Create Release Candidate'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{github.ref_name}}
          fail_on_unmatched_files: true
          files: |
            **/uniond-release-aarch64-linux
            **/uniond-release-x86_64-linux
            **/galoisd-aarch64-linux
            **/galoisd-x86_64-linux
      - if: "!contains(github.ref_name, 'rc')"
        name: 'Create Release'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          tag_name: ${{github.ref_name}}
          body_path: ${{github.ref_name}}-CHANGELOG.md
          fail_on_unmatched_files: true
          files: |
            **/uniond-release-aarch64-linux
            **/uniond-release-x86_64-linux
            **/galoisd-aarch64-linux
            **/galoisd-x86_64-linux
