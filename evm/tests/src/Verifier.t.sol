pragma solidity ^0.8.18;

import "forge-std/Test.sol";
import "../../contracts/core/IZKVerifier.sol";
import "../../contracts/lib/CometblsHelp.sol";
import "../../contracts/lib/Encoder.sol";
import "../../contracts/clients/TestnetVerifier.sol";
import "../../contracts/proto/ibc/core/channel/v1/channel.sol";
import "../../contracts/proto/tendermint/types/canonical.sol";

contract VerifierTest is Test {
    using CometblsHelp for TendermintTypesHeader.Data;
    using CometblsHelp for IZKVerifier;

    IZKVerifier testnetVerifier;

    function setUp() public {
        testnetVerifier = new TestnetVerifier();
    }

    /*
Gnark Proof: 1399B76575BD5E6CA1702D5909156C10C50D8DD2B2CA4CCC712CABB3ADC77E182E924A3662880B270291E8EF714B1B3521A94649EBACCAEB2A00EAB5462BAD22061E58686F7E5E66694E5FC0ADDA1F0AD0DE6B787367AF7A24F68972E9FA6DED2E791F046850BD8E30A94D48676B55BF4284F1C2AA0DCE8F2B673F80145485AF08393359595FEB6EDB8B41B278088D8755E698EDD3AAFCE67392FEB86F7CEA3C143783B84F7F71A4AE1823DF049290820E525E8C8A0D1CF55F8BAD8C602C042014078A8D69298F31722871BD57111C5E88DF3E0E57CB41ED4EFD75DCA9D1B6B30961A839303A6B919D377272434A8D86375D021B80AA71AAFC935BAF20008EEB13C526109387A1931D99E1FA4317DB4BE46A595E914E0AE10EB4DBF34CFF5E4917E68CDC76DECA59D571E31590D8229E7AA4A437D9E94A082BAA6F2D8ED7D95D0384F5A24A73D39BBB7AA99F9A8564B45E53E11761918D37C258CD79D9D692741187260A671E0F7B74F073B2E538442B6A0688BA5D49F783C12A5481DFCCF58A
Public inputs: 0000000600000000000000060000000000000000000000000000000010B7AEC2603155B841022186480D64DB000000000000000000000000000000001BBBE9BFA12A58987BEC21FB945DFB810000000000000000000000000000000010B7AEC2603155B841022186480D64DB000000000000000000000000000000001BBBE9BFA12A58987BEC21FB945DFB811BF54D584358BACF7428A114B333D709708BC54DDEA41B369CEC928999311D070A9A0161CF647EAC03A640E4A2BE432373B5AF4520AD5D8B9D4E936EA1D9AFE8
Trusted root: 10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81
Untrusted root: 10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81
EVM compatible ZKP: 1399B76575BD5E6CA1702D5909156C10C50D8DD2B2CA4CCC712CABB3ADC77E182E924A3662880B270291E8EF714B1B3521A94649EBACCAEB2A00EAB5462BAD22061E58686F7E5E66694E5FC0ADDA1F0AD0DE6B787367AF7A24F68972E9FA6DED2E791F046850BD8E30A94D48676B55BF4284F1C2AA0DCE8F2B673F80145485AF08393359595FEB6EDB8B41B278088D8755E698EDD3AAFCE67392FEB86F7CEA3C143783B84F7F71A4AE1823DF049290820E525E8C8A0D1CF55F8BAD8C602C042014078A8D69298F31722871BD57111C5E88DF3E0E57CB41ED4EFD75DCA9D1B6B30961A839303A6B919D377272434A8D86375D021B80AA71AAFC935BAF20008EEB13C526109387A1931D99E1FA4317DB4BE46A595E914E0AE10EB4DBF34CFF5E4917E68CDC76DECA59D571E31590D8229E7AA4A437D9E94A082BAA6F2D8ED7D95D0384F5A24A73D39BBB7AA99F9A8564B45E53E11761918D37C258CD79D9D69274
    */
    function testValidTestnetProof() public {
        bytes memory blockHash = hex"1AD5BACC115AF66ADBA05C6D2393D73FD41E0DF1F761ED33344668BF71DEB9CB";
        bytes memory partSetHeaderHash = hex"6A80C88DA6FE1FA7773949270805567C963028008B10441E0180CF8AA1D400C9";
        TendermintTypesCanonicalVote.Data memory vote = TendermintTypesCanonicalVote.Data({
            type_: TendermintTypesTypesGlobalEnums.SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT,
            height: 1,
            round: 0,
            block_id: TendermintTypesCanonicalBlockID.Data({
                hash: blockHash,
                part_set_header: TendermintTypesCanonicalPartSetHeader.Data({
                    total: 1,
                    hash: partSetHeaderHash
                    })
                }),
            chain_id: "union-devnet-1"
            });
        bytes memory signedVote = Encoder.encodeDelim(TendermintTypesCanonicalVote.encode(vote));
        bytes32 trustedValidatorsHash = hex"10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81";
        bytes32 untrustedValidatorsHash = hex"10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81";
        bytes memory zkp = hex"1399B76575BD5E6CA1702D5909156C10C50D8DD2B2CA4CCC712CABB3ADC77E182E924A3662880B270291E8EF714B1B3521A94649EBACCAEB2A00EAB5462BAD22061E58686F7E5E66694E5FC0ADDA1F0AD0DE6B787367AF7A24F68972E9FA6DED2E791F046850BD8E30A94D48676B55BF4284F1C2AA0DCE8F2B673F80145485AF08393359595FEB6EDB8B41B278088D8755E698EDD3AAFCE67392FEB86F7CEA3C143783B84F7F71A4AE1823DF049290820E525E8C8A0D1CF55F8BAD8C602C042014078A8D69298F31722871BD57111C5E88DF3E0E57CB41ED4EFD75DCA9D1B6B30961A839303A6B919D377272434A8D86375D021B80AA71AAFC935BAF20008EEB13C526109387A1931D99E1FA4317DB4BE46A595E914E0AE10EB4DBF34CFF5E4917E68CDC76DECA59D571E31590D8229E7AA4A437D9E94A082BAA6F2D8ED7D95D0384F5A24A73D39BBB7AA99F9A8564B45E53E11761918D37C258CD79D9D69274";
        require(
                testnetVerifier.verifyZKP(trustedValidatorsHash, untrustedValidatorsHash, signedVote, zkp),
                "invalid proof"
        );
    }
}
